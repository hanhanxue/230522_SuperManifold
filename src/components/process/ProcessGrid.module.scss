
@use '@/styles/abstracts' as *;


.xFrame {
    @include xFrameWide;

}

.yFrame {
    margin: rem(64) 0;
}

.gridContainer {
    // background-color: red;
    max-width: 1536px;
    margin: 0 auto;

    // padding: 16px;
}

.processGrid {
    display: grid;
    gap: rem(16);

    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    // grid-template-columns: repeat(2, 1fr);

}

.gridItem {
    // background-color: blue;
    padding-top: 133%;

    position: relative;
}

.card {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    display: flex;
    flex-direction: column;
}

.postImageFrame {
    flex: 1 0 auto;
    border-radius: $radius-xl;
    overflow: hidden;

    // background-color: orange;
}




.nextImageContainer {
    position: relative;
    // background-color: red;
    width: 100%;
    height: 100%;
}




.postInfoFrame {
    display: flex;
    justify-content: space-between;

    // background-color: orange;
    // margin-top: rem(16);
    padding: rem(16);
}

.postInfoFrameLeft {
    margin-right: rem(16);
}

.postTitle {
    height: rem(56);


        display: -webkit-box;
        max-width: 200px;
        -webkit-line-clamp: 2;
   
        -webkit-box-orient: vertical;
        overflow: hidden;
  
}

.postDate {
    color: $color-gray-500;
    padding-bottom: rem(4);
}




.linkButton {
    border-radius: rem(99);
    // background-color: black;
    width: rem(64);
    height: rem(40);

    padding: rem(8);

    // border: 1px solid black;
    // box-shadow: 0 0 0 1px $color-primary;
    border: 1px solid $color-primary;
    box-shadow: 0 0 1px 0 $color-primary inset, 0 0 1px 0 $color-primary;

    transition: background-color $anim-duration-default;
    // transition: box-shadow $anim-duration-default;

    &:hover {
        background-color: $color-primary;
        border: 1px solid $color-primary;
        box-shadow: 0 0 1px 0 $color-primary inset, 0 0 1px 0 $color-primary;
    }

    .arrow {
        // top: 50%;
        // left: 50%;
        transform: translate(50%, 0);
        display: block;
        stroke: black;

    }
    
    
}

.postInfoFrameRight {
    display:flex;
    align-items: center;
}











// .card {
//     // width: 400px;
//     // height: 500px;
//     // background-color: rgb(154, 154, 154);
//     border-radius: 16px;
//     position: relative;

//     overflow: hidden;
//     // box-shadow: 0 0 16px 0 rgba(0, 0, 0, .1);

//     // transition: box-shadow .3s;

//     &:hover {
//         // box-shadow: 0 0 0 0 rgba(0, 0, 0, .1);
//     }
// }

// .button {
//     position: absolute;
//     background-color: rgb(255, 255, 255);
//     height: 40px;
//     width: 80px;

//     right: 16px;
//     bottom: 16px;
//     border-radius: 100px;


//     &:hover {
//         background-color: rgb(247, 211, 36);
//     }
//     &:hover .arrow {
//         transform: translateX(40px);
//         // background-color: red;
//         opacity: 1;
//     }
// }

// .arrow {
//     position: absolute;
//     top: 0;
//     left: 0;

//     opacity: 0;
//     transition: .25s;

 
// }

